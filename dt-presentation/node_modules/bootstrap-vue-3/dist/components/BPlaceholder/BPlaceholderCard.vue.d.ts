import type { Booleanish, PlaceholderAnimation, PlaceholderSize } from '../../types';
declare const _sfc_main: import("vue").DefineComponent<{
    noHeader: {
        type: null;
        required: false;
        default: boolean;
    };
    headerWidth: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
        default: number;
    };
    headerVariant: {
        type: null;
        required: false;
    };
    headerAnimation: {
        type: null;
        required: false;
    };
    headerSize: {
        type: null;
        required: false;
    };
    noFooter: {
        type: null;
        required: false;
        default: boolean;
    };
    footerWidth: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
        default: number;
    };
    footerVariant: {
        type: null;
        required: false;
    };
    footerAnimation: {
        type: null;
        required: false;
    };
    footerSize: {
        type: null;
        required: false;
    };
    animation: {
        type: null;
        required: false;
    };
    size: {
        type: null;
        required: false;
    };
    variant: {
        type: null;
        required: false;
    };
    noButton: {
        type: null;
        required: false;
        default: boolean;
    };
    imgBottom: {
        type: null;
        required: false;
        default: boolean;
    };
    imgSrc: {
        type: StringConstructor;
        required: false;
    };
    imgBlankColor: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    imgHeight: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
        default: number;
    };
    noImg: {
        type: null;
        required: false;
        default: boolean;
    };
}, {
    props: any;
    noButtonBoolean: Readonly<import("vue").Ref<boolean>>;
    noHeaderBoolean: Readonly<import("vue").Ref<boolean>>;
    noFooterBoolean: Readonly<import("vue").Ref<boolean>>;
    noImgBoolean: Readonly<import("vue").Ref<boolean>>;
    headerAttrs: import("vue").ComputedRef<{
        width: string | number;
        variant: keyof import("../../types").BaseColorVariant | undefined;
        animation: PlaceholderAnimation | undefined;
        size: PlaceholderSize | undefined;
    }>;
    footerAttrs: import("vue").ComputedRef<{
        width: string | number;
        animation: PlaceholderAnimation | undefined;
        size: PlaceholderSize | undefined;
        variant: keyof import("../../types").BaseColorVariant | undefined;
    }>;
    imgAttrs: import("vue").ComputedRef<{
        blank: boolean;
        blankColor: string;
        height: string | number | undefined;
        src: string | undefined;
        top: boolean;
        bottom: Booleanish;
    }>;
    BCard: import("vue").DefineComponent<{
        align: {
            type: null;
            required: false;
        };
        bgVariant: {
            type: null;
            required: false;
        };
        bodyBgVariant: {
            type: null;
            required: false;
        };
        bodyClass: {
            type: null;
            required: false;
        };
        bodyTag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        bodyTextVariant: {
            type: null;
            required: false;
        };
        borderVariant: {
            type: null;
            required: false;
        };
        footer: {
            type: StringConstructor;
            required: false;
        };
        footerBgVariant: {
            type: null;
            required: false;
        };
        footerBorderVariant: {
            type: null;
            required: false;
        };
        footerClass: {
            type: null;
            required: false;
        };
        footerHtml: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        footerTag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        footerTextVariant: {
            type: null;
            required: false;
        };
        header: {
            type: StringConstructor;
            required: false;
        };
        headerBgVariant: {
            type: null;
            required: false;
        };
        headerBorderVariant: {
            type: null;
            required: false;
        };
        headerClass: {
            type: null;
            required: false;
        };
        headerHtml: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        headerTag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        headerTextVariant: {
            type: null;
            required: false;
        };
        imgAlt: {
            type: StringConstructor;
            required: false;
        };
        imgBottom: {
            type: null;
            required: false;
            default: boolean;
        };
        imgEnd: {
            type: null;
            required: false;
            default: boolean;
        };
        imgHeight: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
        imgLeft: {
            type: null;
            required: false;
            default: boolean;
        };
        imgRight: {
            type: null;
            required: false;
            default: boolean;
        };
        imgSrc: {
            type: StringConstructor;
            required: false;
        };
        imgStart: {
            type: null;
            required: false;
            default: boolean;
        };
        imgTop: {
            type: null;
            required: false;
            default: boolean;
        };
        imgWidth: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
        noBody: {
            type: null;
            required: false;
            default: boolean;
        };
        overlay: {
            type: null;
            required: false;
            default: boolean;
        };
        subtitle: {
            type: StringConstructor;
            required: false;
        };
        subtitleTag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        subtitleTextVariant: {
            type: null;
            required: false;
            default: string;
        };
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        textVariant: {
            type: null;
            required: false;
        };
        title: {
            type: StringConstructor;
            required: false;
        };
        titleTag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        bodyText: {
            type: StringConstructor;
            required: false;
            default: string;
        };
    }, {
        props: any;
        slots: Readonly<{
            [name: string]: import("vue").Slot | undefined;
        }>;
        imgBottomBoolean: Readonly<import("vue").Ref<boolean>>;
        imgEndBoolean: Readonly<import("vue").Ref<boolean>>;
        imgLeftBoolean: Readonly<import("vue").Ref<boolean>>;
        imgRightBoolean: Readonly<import("vue").Ref<boolean>>;
        imgStartBoolean: Readonly<import("vue").Ref<boolean>>;
        noBodyBoolean: Readonly<import("vue").Ref<boolean>>;
        hasHeaderSlot: import("vue").ComputedRef<boolean>;
        hasFooterSlot: import("vue").ComputedRef<boolean>;
        computedClasses: import("vue").ComputedRef<{
            [x: string]: boolean;
            'flex-row': boolean;
            'flex-row-reverse': boolean;
        }>;
        headerAttrs: import("vue").ComputedRef<{
            bgVariant: keyof import("../../types").BaseColorVariant | undefined;
            borderVariant: keyof import("../../types").BaseColorVariant | undefined;
            html: string;
            tag: string;
            textVariant: keyof import("../../types").BaseTextColorVariant | undefined;
        }>;
        bodyAttrs: import("vue").ComputedRef<{
            overlay: Booleanish;
            bodyBgVariant: keyof import("../../types").BaseColorVariant | undefined;
            bodyTag: string;
            bodyTextVariant: keyof import("../../types").BaseTextColorVariant | undefined;
            subtitle: string | undefined;
            subtitleTag: string;
            subtitleTextVariant: keyof import("../../types").BaseTextColorVariant;
            title: string | undefined;
            titleTag: string;
        }>;
        footerAttrs: import("vue").ComputedRef<{
            bgVariant: keyof import("../../types").BaseColorVariant | undefined;
            borderVariant: keyof import("../../types").BaseColorVariant | undefined;
            html: string;
            tag: string;
            textVariant: keyof import("../../types").BaseTextColorVariant | undefined;
        }>;
        imgAttr: import("vue").ComputedRef<{
            src: string | undefined;
            alt: string | undefined;
            height: string | number | undefined;
            width: string | number | undefined;
            bottom: Booleanish;
            end: Booleanish;
            left: Booleanish;
            right: Booleanish;
            start: Booleanish;
            top: Booleanish;
        }>;
        BCardImg: import("vue").DefineComponent<{
            alt: {
                type: StringConstructor;
                required: false;
            };
            blank: {
                type: null;
                required: false;
                default: boolean;
            };
            blankColor: {
                type: StringConstructor;
                required: false;
            };
            bottom: {
                type: null;
                required: false;
                default: boolean;
            };
            lazy: {
                type: null;
                required: false;
                default: boolean;
            };
            height: {
                type: (StringConstructor | NumberConstructor)[];
                required: false;
            };
            left: {
                type: null;
                required: false;
                default: boolean;
            };
            start: {
                type: null;
                required: false;
                default: boolean;
            };
            right: {
                type: null;
                required: false;
                default: boolean;
            };
            end: {
                type: null;
                required: false;
                default: boolean;
            };
            sizes: {
                type: (StringConstructor | ArrayConstructor)[];
                required: false;
            };
            src: {
                type: StringConstructor;
                required: false;
            };
            srcset: {
                type: (StringConstructor | ArrayConstructor)[];
                required: false;
            };
            top: {
                type: null;
                required: false;
                default: boolean;
            };
            width: {
                type: (StringConstructor | NumberConstructor)[];
                required: false;
            };
        }, {
            props: any;
            emit: (e: "load", value: Event) => void;
            bottomBoolean: Readonly<import("vue").Ref<boolean>>;
            endBoolean: Readonly<import("vue").Ref<boolean>>;
            leftBoolean: Readonly<import("vue").Ref<boolean>>;
            rightBoolean: Readonly<import("vue").Ref<boolean>>;
            startBoolean: Readonly<import("vue").Ref<boolean>>;
            topBoolean: Readonly<import("vue").Ref<boolean>>;
            baseClass: import("vue").ComputedRef<"card-img-top" | "card-img-right" | "card-img-bottom" | "card-img-left" | "card-img">;
            computedAttrs: import("vue").ComputedRef<{
                alt: string | undefined;
                height: string | number | undefined;
                src: string | undefined;
                lazy: Booleanish;
                width: string | number | undefined;
                blank: Booleanish;
                blankColor: string | undefined;
                sizes: string | string[] | undefined;
                srcset: string | string[] | undefined;
            }>;
            BImg: import("vue").DefineComponent<{
                alt: {
                    type: StringConstructor;
                    required: false;
                };
                blank: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                blankColor: {
                    type: StringConstructor;
                    required: false;
                    default: string;
                };
                block: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                center: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                fluid: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                lazy: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                fluidGrow: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                height: {
                    type: (StringConstructor | NumberConstructor)[];
                    required: false;
                };
                left: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                start: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                right: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                end: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                rounded: {
                    type: (StringConstructor | BooleanConstructor)[];
                    required: false;
                    default: boolean;
                };
                sizes: {
                    type: (StringConstructor | ArrayConstructor)[];
                    required: false;
                };
                src: {
                    type: StringConstructor;
                    required: false;
                };
                srcset: {
                    type: (StringConstructor | ArrayConstructor)[];
                    required: false;
                };
                thumbnail: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                width: {
                    type: (StringConstructor | NumberConstructor)[];
                    required: false;
                };
            }, {
                props: any;
                emit: (e: "load", value: Event) => void;
                BLANK_TEMPLATE: string;
                lazyBoolean: Readonly<import("vue").Ref<boolean>>;
                blankBoolean: Readonly<import("vue").Ref<boolean>>;
                blockBoolean: Readonly<import("vue").Ref<boolean>>;
                centerBoolean: Readonly<import("vue").Ref<boolean>>;
                fluidBoolean: Readonly<import("vue").Ref<boolean>>;
                fluidGrowBoolean: Readonly<import("vue").Ref<boolean>>;
                leftBoolean: Readonly<import("vue").Ref<boolean>>;
                startBoolean: Readonly<import("vue").Ref<boolean>>;
                rightBoolean: Readonly<import("vue").Ref<boolean>>;
                endBoolean: Readonly<import("vue").Ref<boolean>>;
                thumbnailBoolean: Readonly<import("vue").Ref<boolean>>;
                computedSrcset: import("vue").ComputedRef<string | undefined>;
                computedSizes: import("vue").ComputedRef<string | undefined>;
                computedDimentions: import("vue").ComputedRef<{
                    height: number | undefined;
                    width: number | undefined;
                }>;
                computedBlankImgSrc: import("vue").ComputedRef<string>;
                computedAttrs: import("vue").ComputedRef<{
                    src: string | undefined;
                    alt: string | undefined;
                    width: number | undefined;
                    height: number | undefined;
                    srcset: string | undefined;
                    sizes: string | undefined;
                    loading: string;
                }>;
                alignment: import("vue").ComputedRef<"float-start" | "float-end" | "mx-auto" | undefined>;
                computedClasses: import("vue").ComputedRef<{
                    [x: string]: boolean;
                    'img-thumbnail': boolean;
                    'img-fluid': boolean;
                    'w-100': boolean;
                    rounded: boolean;
                    'd-block': boolean;
                }>;
                makeBlankImgSrc: (width: number | undefined, height: number | undefined, color: string) => string;
            }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "load"[], "load", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
                alt: {
                    type: StringConstructor;
                    required: false;
                };
                blank: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                blankColor: {
                    type: StringConstructor;
                    required: false;
                    default: string;
                };
                block: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                center: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                fluid: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                lazy: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                fluidGrow: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                height: {
                    type: (StringConstructor | NumberConstructor)[];
                    required: false;
                };
                left: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                start: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                right: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                end: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                rounded: {
                    type: (StringConstructor | BooleanConstructor)[];
                    required: false;
                    default: boolean;
                };
                sizes: {
                    type: (StringConstructor | ArrayConstructor)[];
                    required: false;
                };
                src: {
                    type: StringConstructor;
                    required: false;
                };
                srcset: {
                    type: (StringConstructor | ArrayConstructor)[];
                    required: false;
                };
                thumbnail: {
                    type: null;
                    required: false;
                    default: boolean;
                };
                width: {
                    type: (StringConstructor | NumberConstructor)[];
                    required: false;
                };
            }>> & {
                onLoad?: ((...args: any[]) => any) | undefined;
            }, {
                rounded: string | boolean;
                left: any;
                right: any;
                center: any;
                end: any;
                start: any;
                block: any;
                blank: any;
                blankColor: string;
                lazy: any;
                fluid: any;
                fluidGrow: any;
                thumbnail: any;
            }>;
        }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "load"[], "load", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
            alt: {
                type: StringConstructor;
                required: false;
            };
            blank: {
                type: null;
                required: false;
                default: boolean;
            };
            blankColor: {
                type: StringConstructor;
                required: false;
            };
            bottom: {
                type: null;
                required: false;
                default: boolean;
            };
            lazy: {
                type: null;
                required: false;
                default: boolean;
            };
            height: {
                type: (StringConstructor | NumberConstructor)[];
                required: false;
            };
            left: {
                type: null;
                required: false;
                default: boolean;
            };
            start: {
                type: null;
                required: false;
                default: boolean;
            };
            right: {
                type: null;
                required: false;
                default: boolean;
            };
            end: {
                type: null;
                required: false;
                default: boolean;
            };
            sizes: {
                type: (StringConstructor | ArrayConstructor)[];
                required: false;
            };
            src: {
                type: StringConstructor;
                required: false;
            };
            srcset: {
                type: (StringConstructor | ArrayConstructor)[];
                required: false;
            };
            top: {
                type: null;
                required: false;
                default: boolean;
            };
            width: {
                type: (StringConstructor | NumberConstructor)[];
                required: false;
            };
        }>> & {
            onLoad?: ((...args: any[]) => any) | undefined;
        }, {
            top: any;
            bottom: any;
            left: any;
            right: any;
            end: any;
            start: any;
            blank: any;
            lazy: any;
        }>;
        BCardHeader: import("vue").DefineComponent<{
            text: {
                type: StringConstructor;
                required: false;
            };
            bgVariant: {
                type: null;
                required: false;
            };
            borderVariant: {
                type: null;
                required: false;
            };
            html: {
                type: StringConstructor;
                required: false;
            };
            tag: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            textVariant: {
                type: null;
                required: false;
            };
        }, {
            props: any;
            BCardHeadFoot: import("vue").DefineComponent<{
                text: {
                    type: StringConstructor;
                    required: false;
                };
                bgVariant: {
                    type: null;
                    required: false;
                };
                borderVariant: {
                    type: null;
                    required: false;
                };
                html: {
                    type: StringConstructor;
                    required: false;
                };
                tag: {
                    type: StringConstructor;
                    required: false;
                    default: string;
                };
                textVariant: {
                    type: null;
                    required: false;
                };
            }, {
                props: any;
                computedClasses: import("vue").ComputedRef<{
                    [x: string]: boolean;
                }>;
            }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
                text: {
                    type: StringConstructor;
                    required: false;
                };
                bgVariant: {
                    type: null;
                    required: false;
                };
                borderVariant: {
                    type: null;
                    required: false;
                };
                html: {
                    type: StringConstructor;
                    required: false;
                };
                tag: {
                    type: StringConstructor;
                    required: false;
                    default: string;
                };
                textVariant: {
                    type: null;
                    required: false;
                };
            }>>, {
                tag: string;
            }>;
        }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
            text: {
                type: StringConstructor;
                required: false;
            };
            bgVariant: {
                type: null;
                required: false;
            };
            borderVariant: {
                type: null;
                required: false;
            };
            html: {
                type: StringConstructor;
                required: false;
            };
            tag: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            textVariant: {
                type: null;
                required: false;
            };
        }>>, {
            tag: string;
        }>;
        BCardBody: import("vue").DefineComponent<{
            bodyBgVariant: {
                type: null;
                required: false;
            };
            bodyTag: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            bodyTextVariant: {
                type: null;
                required: false;
            };
            overlay: {
                type: null;
                required: false;
                default: boolean;
            };
            subtitle: {
                type: StringConstructor;
                required: false;
            };
            subtitleTag: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            subtitleTextVariant: {
                type: null;
                required: false;
            };
            title: {
                type: StringConstructor;
                required: false;
            };
            titleTag: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            text: {
                type: StringConstructor;
                required: false;
            };
        }, {
            props: any;
            slots: Readonly<{
                [name: string]: import("vue").Slot | undefined;
            }>;
            overlayBoolean: Readonly<import("vue").Ref<boolean>>;
            hasTitleSlot: import("vue").ComputedRef<boolean>;
            hasSubtitleSlot: import("vue").ComputedRef<boolean>;
            computedClasses: import("vue").ComputedRef<{
                [x: string]: boolean;
                'card-img-overlay': boolean;
            }>;
            BCardTitle: import("vue").DefineComponent<{
                text: {
                    type: StringConstructor;
                    required: false;
                };
                tag: {
                    type: StringConstructor;
                    required: false;
                    default: string;
                };
            }, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
                text: {
                    type: StringConstructor;
                    required: false;
                };
                tag: {
                    type: StringConstructor;
                    required: false;
                    default: string;
                };
            }>>, {
                tag: string;
            }>;
            BCardSubtitle: import("vue").DefineComponent<{
                text: {
                    type: StringConstructor;
                    required: false;
                };
                tag: {
                    type: StringConstructor;
                    required: false;
                    default: string;
                };
                textVariant: {
                    type: null;
                    required: false;
                    default: string;
                };
            }, {
                props: any;
                coomputedClasses: import("vue").ComputedRef<string[]>;
            }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
                text: {
                    type: StringConstructor;
                    required: false;
                };
                tag: {
                    type: StringConstructor;
                    required: false;
                    default: string;
                };
                textVariant: {
                    type: null;
                    required: false;
                    default: string;
                };
            }>>, {
                tag: string;
                textVariant: any;
            }>;
        }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
            bodyBgVariant: {
                type: null;
                required: false;
            };
            bodyTag: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            bodyTextVariant: {
                type: null;
                required: false;
            };
            overlay: {
                type: null;
                required: false;
                default: boolean;
            };
            subtitle: {
                type: StringConstructor;
                required: false;
            };
            subtitleTag: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            subtitleTextVariant: {
                type: null;
                required: false;
            };
            title: {
                type: StringConstructor;
                required: false;
            };
            titleTag: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            text: {
                type: StringConstructor;
                required: false;
            };
        }>>, {
            overlay: any;
            bodyTag: string;
            subtitleTag: string;
            titleTag: string;
        }>;
        BCardFooter: import("vue").DefineComponent<{
            text: {
                type: StringConstructor;
                required: false;
            };
            bgVariant: {
                type: null;
                required: false;
            };
            borderVariant: {
                type: null;
                required: false;
            };
            html: {
                type: StringConstructor;
                required: false;
            };
            tag: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            textVariant: {
                type: null;
                required: false;
            };
        }, {
            props: any;
            BCardHeadFoot: import("vue").DefineComponent<{
                text: {
                    type: StringConstructor;
                    required: false;
                };
                bgVariant: {
                    type: null;
                    required: false;
                };
                borderVariant: {
                    type: null;
                    required: false;
                };
                html: {
                    type: StringConstructor;
                    required: false;
                };
                tag: {
                    type: StringConstructor;
                    required: false;
                    default: string;
                };
                textVariant: {
                    type: null;
                    required: false;
                };
            }, {
                props: any;
                computedClasses: import("vue").ComputedRef<{
                    [x: string]: boolean;
                }>;
            }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
                text: {
                    type: StringConstructor;
                    required: false;
                };
                bgVariant: {
                    type: null;
                    required: false;
                };
                borderVariant: {
                    type: null;
                    required: false;
                };
                html: {
                    type: StringConstructor;
                    required: false;
                };
                tag: {
                    type: StringConstructor;
                    required: false;
                    default: string;
                };
                textVariant: {
                    type: null;
                    required: false;
                };
            }>>, {
                tag: string;
            }>;
        }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
            text: {
                type: StringConstructor;
                required: false;
            };
            bgVariant: {
                type: null;
                required: false;
            };
            borderVariant: {
                type: null;
                required: false;
            };
            html: {
                type: StringConstructor;
                required: false;
            };
            tag: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            textVariant: {
                type: null;
                required: false;
            };
        }>>, {
            tag: string;
        }>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        align: {
            type: null;
            required: false;
        };
        bgVariant: {
            type: null;
            required: false;
        };
        bodyBgVariant: {
            type: null;
            required: false;
        };
        bodyClass: {
            type: null;
            required: false;
        };
        bodyTag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        bodyTextVariant: {
            type: null;
            required: false;
        };
        borderVariant: {
            type: null;
            required: false;
        };
        footer: {
            type: StringConstructor;
            required: false;
        };
        footerBgVariant: {
            type: null;
            required: false;
        };
        footerBorderVariant: {
            type: null;
            required: false;
        };
        footerClass: {
            type: null;
            required: false;
        };
        footerHtml: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        footerTag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        footerTextVariant: {
            type: null;
            required: false;
        };
        header: {
            type: StringConstructor;
            required: false;
        };
        headerBgVariant: {
            type: null;
            required: false;
        };
        headerBorderVariant: {
            type: null;
            required: false;
        };
        headerClass: {
            type: null;
            required: false;
        };
        headerHtml: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        headerTag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        headerTextVariant: {
            type: null;
            required: false;
        };
        imgAlt: {
            type: StringConstructor;
            required: false;
        };
        imgBottom: {
            type: null;
            required: false;
            default: boolean;
        };
        imgEnd: {
            type: null;
            required: false;
            default: boolean;
        };
        imgHeight: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
        imgLeft: {
            type: null;
            required: false;
            default: boolean;
        };
        imgRight: {
            type: null;
            required: false;
            default: boolean;
        };
        imgSrc: {
            type: StringConstructor;
            required: false;
        };
        imgStart: {
            type: null;
            required: false;
            default: boolean;
        };
        imgTop: {
            type: null;
            required: false;
            default: boolean;
        };
        imgWidth: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
        noBody: {
            type: null;
            required: false;
            default: boolean;
        };
        overlay: {
            type: null;
            required: false;
            default: boolean;
        };
        subtitle: {
            type: StringConstructor;
            required: false;
        };
        subtitleTag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        subtitleTextVariant: {
            type: null;
            required: false;
            default: string;
        };
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        textVariant: {
            type: null;
            required: false;
        };
        title: {
            type: StringConstructor;
            required: false;
        };
        titleTag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        bodyText: {
            type: StringConstructor;
            required: false;
            default: string;
        };
    }>>, {
        tag: string;
        overlay: any;
        bodyTag: string;
        footerHtml: string;
        footerTag: string;
        headerHtml: string;
        headerTag: string;
        imgBottom: any;
        imgEnd: any;
        imgLeft: any;
        imgRight: any;
        imgStart: any;
        imgTop: any;
        noBody: any;
        subtitleTag: string;
        subtitleTextVariant: any;
        titleTag: string;
        bodyText: string;
    }>;
    BCardImg: import("vue").DefineComponent<{
        alt: {
            type: StringConstructor;
            required: false;
        };
        blank: {
            type: null;
            required: false;
            default: boolean;
        };
        blankColor: {
            type: StringConstructor;
            required: false;
        };
        bottom: {
            type: null;
            required: false;
            default: boolean;
        };
        lazy: {
            type: null;
            required: false;
            default: boolean;
        };
        height: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
        left: {
            type: null;
            required: false;
            default: boolean;
        };
        start: {
            type: null;
            required: false;
            default: boolean;
        };
        right: {
            type: null;
            required: false;
            default: boolean;
        };
        end: {
            type: null;
            required: false;
            default: boolean;
        };
        sizes: {
            type: (StringConstructor | ArrayConstructor)[];
            required: false;
        };
        src: {
            type: StringConstructor;
            required: false;
        };
        srcset: {
            type: (StringConstructor | ArrayConstructor)[];
            required: false;
        };
        top: {
            type: null;
            required: false;
            default: boolean;
        };
        width: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
    }, {
        props: any;
        emit: (e: "load", value: Event) => void;
        bottomBoolean: Readonly<import("vue").Ref<boolean>>;
        endBoolean: Readonly<import("vue").Ref<boolean>>;
        leftBoolean: Readonly<import("vue").Ref<boolean>>;
        rightBoolean: Readonly<import("vue").Ref<boolean>>;
        startBoolean: Readonly<import("vue").Ref<boolean>>;
        topBoolean: Readonly<import("vue").Ref<boolean>>;
        baseClass: import("vue").ComputedRef<"card-img-top" | "card-img-right" | "card-img-bottom" | "card-img-left" | "card-img">;
        computedAttrs: import("vue").ComputedRef<{
            alt: string | undefined;
            height: string | number | undefined;
            src: string | undefined;
            lazy: Booleanish;
            width: string | number | undefined;
            blank: Booleanish;
            blankColor: string | undefined;
            sizes: string | string[] | undefined;
            srcset: string | string[] | undefined;
        }>;
        BImg: import("vue").DefineComponent<{
            alt: {
                type: StringConstructor;
                required: false;
            };
            blank: {
                type: null;
                required: false;
                default: boolean;
            };
            blankColor: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            block: {
                type: null;
                required: false;
                default: boolean;
            };
            center: {
                type: null;
                required: false;
                default: boolean;
            };
            fluid: {
                type: null;
                required: false;
                default: boolean;
            };
            lazy: {
                type: null;
                required: false;
                default: boolean;
            };
            fluidGrow: {
                type: null;
                required: false;
                default: boolean;
            };
            height: {
                type: (StringConstructor | NumberConstructor)[];
                required: false;
            };
            left: {
                type: null;
                required: false;
                default: boolean;
            };
            start: {
                type: null;
                required: false;
                default: boolean;
            };
            right: {
                type: null;
                required: false;
                default: boolean;
            };
            end: {
                type: null;
                required: false;
                default: boolean;
            };
            rounded: {
                type: (StringConstructor | BooleanConstructor)[];
                required: false;
                default: boolean;
            };
            sizes: {
                type: (StringConstructor | ArrayConstructor)[];
                required: false;
            };
            src: {
                type: StringConstructor;
                required: false;
            };
            srcset: {
                type: (StringConstructor | ArrayConstructor)[];
                required: false;
            };
            thumbnail: {
                type: null;
                required: false;
                default: boolean;
            };
            width: {
                type: (StringConstructor | NumberConstructor)[];
                required: false;
            };
        }, {
            props: any;
            emit: (e: "load", value: Event) => void;
            BLANK_TEMPLATE: string;
            lazyBoolean: Readonly<import("vue").Ref<boolean>>;
            blankBoolean: Readonly<import("vue").Ref<boolean>>;
            blockBoolean: Readonly<import("vue").Ref<boolean>>;
            centerBoolean: Readonly<import("vue").Ref<boolean>>;
            fluidBoolean: Readonly<import("vue").Ref<boolean>>;
            fluidGrowBoolean: Readonly<import("vue").Ref<boolean>>;
            leftBoolean: Readonly<import("vue").Ref<boolean>>;
            startBoolean: Readonly<import("vue").Ref<boolean>>;
            rightBoolean: Readonly<import("vue").Ref<boolean>>;
            endBoolean: Readonly<import("vue").Ref<boolean>>;
            thumbnailBoolean: Readonly<import("vue").Ref<boolean>>;
            computedSrcset: import("vue").ComputedRef<string | undefined>;
            computedSizes: import("vue").ComputedRef<string | undefined>;
            computedDimentions: import("vue").ComputedRef<{
                height: number | undefined;
                width: number | undefined;
            }>;
            computedBlankImgSrc: import("vue").ComputedRef<string>;
            computedAttrs: import("vue").ComputedRef<{
                src: string | undefined;
                alt: string | undefined;
                width: number | undefined;
                height: number | undefined;
                srcset: string | undefined;
                sizes: string | undefined;
                loading: string;
            }>;
            alignment: import("vue").ComputedRef<"float-start" | "float-end" | "mx-auto" | undefined>;
            computedClasses: import("vue").ComputedRef<{
                [x: string]: boolean;
                'img-thumbnail': boolean;
                'img-fluid': boolean;
                'w-100': boolean;
                rounded: boolean;
                'd-block': boolean;
            }>;
            makeBlankImgSrc: (width: number | undefined, height: number | undefined, color: string) => string;
        }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "load"[], "load", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
            alt: {
                type: StringConstructor;
                required: false;
            };
            blank: {
                type: null;
                required: false;
                default: boolean;
            };
            blankColor: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            block: {
                type: null;
                required: false;
                default: boolean;
            };
            center: {
                type: null;
                required: false;
                default: boolean;
            };
            fluid: {
                type: null;
                required: false;
                default: boolean;
            };
            lazy: {
                type: null;
                required: false;
                default: boolean;
            };
            fluidGrow: {
                type: null;
                required: false;
                default: boolean;
            };
            height: {
                type: (StringConstructor | NumberConstructor)[];
                required: false;
            };
            left: {
                type: null;
                required: false;
                default: boolean;
            };
            start: {
                type: null;
                required: false;
                default: boolean;
            };
            right: {
                type: null;
                required: false;
                default: boolean;
            };
            end: {
                type: null;
                required: false;
                default: boolean;
            };
            rounded: {
                type: (StringConstructor | BooleanConstructor)[];
                required: false;
                default: boolean;
            };
            sizes: {
                type: (StringConstructor | ArrayConstructor)[];
                required: false;
            };
            src: {
                type: StringConstructor;
                required: false;
            };
            srcset: {
                type: (StringConstructor | ArrayConstructor)[];
                required: false;
            };
            thumbnail: {
                type: null;
                required: false;
                default: boolean;
            };
            width: {
                type: (StringConstructor | NumberConstructor)[];
                required: false;
            };
        }>> & {
            onLoad?: ((...args: any[]) => any) | undefined;
        }, {
            rounded: string | boolean;
            left: any;
            right: any;
            center: any;
            end: any;
            start: any;
            block: any;
            blank: any;
            blankColor: string;
            lazy: any;
            fluid: any;
            fluidGrow: any;
            thumbnail: any;
        }>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "load"[], "load", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        alt: {
            type: StringConstructor;
            required: false;
        };
        blank: {
            type: null;
            required: false;
            default: boolean;
        };
        blankColor: {
            type: StringConstructor;
            required: false;
        };
        bottom: {
            type: null;
            required: false;
            default: boolean;
        };
        lazy: {
            type: null;
            required: false;
            default: boolean;
        };
        height: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
        left: {
            type: null;
            required: false;
            default: boolean;
        };
        start: {
            type: null;
            required: false;
            default: boolean;
        };
        right: {
            type: null;
            required: false;
            default: boolean;
        };
        end: {
            type: null;
            required: false;
            default: boolean;
        };
        sizes: {
            type: (StringConstructor | ArrayConstructor)[];
            required: false;
        };
        src: {
            type: StringConstructor;
            required: false;
        };
        srcset: {
            type: (StringConstructor | ArrayConstructor)[];
            required: false;
        };
        top: {
            type: null;
            required: false;
            default: boolean;
        };
        width: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
    }>> & {
        onLoad?: ((...args: any[]) => any) | undefined;
    }, {
        top: any;
        bottom: any;
        left: any;
        right: any;
        end: any;
        start: any;
        blank: any;
        lazy: any;
    }>;
    BPlaceholder: import("vue").DefineComponent<{
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        width: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
        cols: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
        variant: {
            type: null;
            required: false;
        };
        size: {
            type: null;
            required: false;
        };
        animation: {
            type: null;
            required: false;
        };
    }, {
        props: any;
        widthString: import("vue").ComputedRef<string | undefined>;
        colsString: import("vue").ComputedRef<string | undefined>;
        computedClasses: import("vue").ComputedRef<{
            [x: string]: boolean;
        }>;
        computedStyle: import("vue").ComputedRef<import("vue").StyleValue | undefined>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        width: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
        cols: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
        variant: {
            type: null;
            required: false;
        };
        size: {
            type: null;
            required: false;
        };
        animation: {
            type: null;
            required: false;
        };
    }>>, {
        tag: string;
    }>;
    BPlaceholderButton: import("vue").DefineComponent<{
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        width: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
        cols: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
        variant: {
            type: null;
            required: false;
            default: string;
        };
        animation: {
            type: null;
            required: false;
        };
    }, {
        props: any;
        computedClasses: import("vue").ComputedRef<string[]>;
        computedAttrs: import("vue").ComputedRef<{
            animation: PlaceholderAnimation | undefined;
            width: string | number | undefined;
            cols: string | number | undefined;
            tag: string;
        }>;
        BPlaceholder: import("vue").DefineComponent<{
            tag: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            width: {
                type: (StringConstructor | NumberConstructor)[];
                required: false;
            };
            cols: {
                type: (StringConstructor | NumberConstructor)[];
                required: false;
            };
            variant: {
                type: null;
                required: false;
            };
            size: {
                type: null;
                required: false;
            };
            animation: {
                type: null;
                required: false;
            };
        }, {
            props: any;
            widthString: import("vue").ComputedRef<string | undefined>;
            colsString: import("vue").ComputedRef<string | undefined>;
            computedClasses: import("vue").ComputedRef<{
                [x: string]: boolean;
            }>;
            computedStyle: import("vue").ComputedRef<import("vue").StyleValue | undefined>;
        }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
            tag: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            width: {
                type: (StringConstructor | NumberConstructor)[];
                required: false;
            };
            cols: {
                type: (StringConstructor | NumberConstructor)[];
                required: false;
            };
            variant: {
                type: null;
                required: false;
            };
            size: {
                type: null;
                required: false;
            };
            animation: {
                type: null;
                required: false;
            };
        }>>, {
            tag: string;
        }>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        width: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
        cols: {
            type: (StringConstructor | NumberConstructor)[];
            required: false;
        };
        variant: {
            type: null;
            required: false;
            default: string;
        };
        animation: {
            type: null;
            required: false;
        };
    }>>, {
        tag: string;
        variant: any;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    noHeader: {
        type: null;
        required: false;
        default: boolean;
    };
    headerWidth: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
        default: number;
    };
    headerVariant: {
        type: null;
        required: false;
    };
    headerAnimation: {
        type: null;
        required: false;
    };
    headerSize: {
        type: null;
        required: false;
    };
    noFooter: {
        type: null;
        required: false;
        default: boolean;
    };
    footerWidth: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
        default: number;
    };
    footerVariant: {
        type: null;
        required: false;
    };
    footerAnimation: {
        type: null;
        required: false;
    };
    footerSize: {
        type: null;
        required: false;
    };
    animation: {
        type: null;
        required: false;
    };
    size: {
        type: null;
        required: false;
    };
    variant: {
        type: null;
        required: false;
    };
    noButton: {
        type: null;
        required: false;
        default: boolean;
    };
    imgBottom: {
        type: null;
        required: false;
        default: boolean;
    };
    imgSrc: {
        type: StringConstructor;
        required: false;
    };
    imgBlankColor: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    imgHeight: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
        default: number;
    };
    noImg: {
        type: null;
        required: false;
        default: boolean;
    };
}>>, {
    imgBottom: any;
    imgHeight: string | number;
    imgBlankColor: string;
    noHeader: any;
    headerWidth: string | number;
    noFooter: any;
    footerWidth: string | number;
    noButton: any;
    noImg: any;
}>;
export default _sfc_main;
