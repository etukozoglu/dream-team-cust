declare const _sfc_main: import("vue").DefineComponent<{
    bodyBgVariant: {
        type: null;
        required: false;
    };
    bodyTag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    bodyTextVariant: {
        type: null;
        required: false;
    };
    overlay: {
        type: null;
        required: false;
        default: boolean;
    };
    subtitle: {
        type: StringConstructor;
        required: false;
    };
    subtitleTag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    subtitleTextVariant: {
        type: null;
        required: false;
    };
    title: {
        type: StringConstructor;
        required: false;
    };
    titleTag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    text: {
        type: StringConstructor;
        required: false;
    };
}, {
    props: any;
    slots: Readonly<{
        [name: string]: import("vue").Slot | undefined;
    }>;
    overlayBoolean: Readonly<import("vue").Ref<boolean>>;
    hasTitleSlot: import("vue").ComputedRef<boolean>;
    hasSubtitleSlot: import("vue").ComputedRef<boolean>;
    computedClasses: import("vue").ComputedRef<{
        [x: string]: boolean;
        'card-img-overlay': boolean;
    }>;
    BCardTitle: import("vue").DefineComponent<{
        text: {
            type: StringConstructor;
            required: false;
        };
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
    }, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        text: {
            type: StringConstructor;
            required: false;
        };
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
    }>>, {
        tag: string;
    }>;
    BCardSubtitle: import("vue").DefineComponent<{
        text: {
            type: StringConstructor;
            required: false;
        };
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        textVariant: {
            type: null;
            required: false;
            default: string;
        };
    }, {
        props: any;
        coomputedClasses: import("vue").ComputedRef<string[]>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        text: {
            type: StringConstructor;
            required: false;
        };
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        textVariant: {
            type: null;
            required: false;
            default: string;
        };
    }>>, {
        tag: string;
        textVariant: any;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    bodyBgVariant: {
        type: null;
        required: false;
    };
    bodyTag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    bodyTextVariant: {
        type: null;
        required: false;
    };
    overlay: {
        type: null;
        required: false;
        default: boolean;
    };
    subtitle: {
        type: StringConstructor;
        required: false;
    };
    subtitleTag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    subtitleTextVariant: {
        type: null;
        required: false;
    };
    title: {
        type: StringConstructor;
        required: false;
    };
    titleTag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    text: {
        type: StringConstructor;
        required: false;
    };
}>>, {
    overlay: any;
    bodyTag: string;
    subtitleTag: string;
    titleTag: string;
}>;
export default _sfc_main;
