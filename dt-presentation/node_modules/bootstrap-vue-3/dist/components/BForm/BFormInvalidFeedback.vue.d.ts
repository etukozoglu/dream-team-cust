declare const _sfc_main: import("vue").DefineComponent<{
    ariaLive: {
        type: StringConstructor;
        required: false;
    };
    forceShow: {
        type: null;
        required: false;
        default: boolean;
    };
    id: {
        type: StringConstructor;
        required: false;
    };
    text: {
        type: StringConstructor;
        required: false;
    };
    role: {
        type: StringConstructor;
        required: false;
    };
    state: {
        type: null;
        required: false;
        default: undefined;
    };
    tag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    tooltip: {
        type: null;
        required: false;
        default: boolean;
    };
}, {
    props: any;
    forceShowBoolean: Readonly<import("vue").Ref<boolean>>;
    stateBoolean: Readonly<import("vue").Ref<boolean>>;
    tooltipBoolean: Readonly<import("vue").Ref<boolean>>;
    computedShow: import("vue").ComputedRef<boolean>;
    computedClasses: import("vue").ComputedRef<{
        'd-block': boolean;
        'invalid-feedback': boolean;
        'invalid-tooltip': boolean;
    }>;
    computedAttrs: import("vue").ComputedRef<{
        id: string | undefined;
        role: string | undefined;
        'aria-live': string | undefined;
        'aria-atomic': string | undefined;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    ariaLive: {
        type: StringConstructor;
        required: false;
    };
    forceShow: {
        type: null;
        required: false;
        default: boolean;
    };
    id: {
        type: StringConstructor;
        required: false;
    };
    text: {
        type: StringConstructor;
        required: false;
    };
    role: {
        type: StringConstructor;
        required: false;
    };
    state: {
        type: null;
        required: false;
        default: undefined;
    };
    tag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    tooltip: {
        type: null;
        required: false;
        default: boolean;
    };
}>>, {
    tag: string;
    tooltip: any;
    state: any;
    forceShow: any;
}>;
export default _sfc_main;
