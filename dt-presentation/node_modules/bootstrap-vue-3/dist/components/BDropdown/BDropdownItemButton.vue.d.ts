import type { ClassValue } from '../../types';
declare const _sfc_main: import("vue").DefineComponent<{
    buttonClass: {
        type: null;
        required: false;
    };
    active: {
        type: null;
        required: false;
        default: boolean;
    };
    activeClass: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    disabled: {
        type: null;
        required: false;
        default: boolean;
    };
    variant: {
        type: null;
        required: false;
    };
}, {
    props: any;
    activeBoolean: Readonly<import("vue").Ref<boolean>>;
    disabledBoolean: Readonly<import("vue").Ref<boolean>>;
    emit: (e: 'click', value: MouseEvent) => void;
    computedClasses: import("vue").ComputedRef<(ClassValue | undefined)[]>;
    clicked: (e: MouseEvent) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "click"[], "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    buttonClass: {
        type: null;
        required: false;
    };
    active: {
        type: null;
        required: false;
        default: boolean;
    };
    activeClass: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    disabled: {
        type: null;
        required: false;
        default: boolean;
    };
    variant: {
        type: null;
        required: false;
    };
}>> & {
    onClick?: ((...args: any[]) => any) | undefined;
}, {
    disabled: any;
    active: any;
    activeClass: string;
}>;
export default _sfc_main;
